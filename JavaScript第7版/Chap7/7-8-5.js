/**
 * サブ配列の操作
 */

/**
 * sliceメソッド
 * ・元の配列には影響なし
 */
const array1 = [0, 1, 2, 3, 4, 5, 6]
array1.slice(0, 3)  // => [0, 1, 2]
array1.slice(2)     // => [2, 3, 4, 5, 6]
array1.slice(3, -1) // => [3, 4, 5]（配列の最後の要素が-1）
console.log(array1) // => [0, 1, 2, 3, 4, 5, 6]（元の配列の中身には影響なし）

/**
 * spliceメソッド
 * ・削除された配列要素が返り値となり、元の配列自体から要素が削除される
 * ・要素の挿入もすることができる（第三引数以降）
 */
const array2 = [0, 1, 2, 3, 4, 5, 6]
array2.splice(2, 3)           // => [0, 1, 5, 6]
array2.splice(2)              // => [0, 1]
array2.splice(1, 1, 1, 2, 3)  // => [0, 1, 2, 3]

/**
 * fillメソッド
 * ・配列要素を特定の値で埋める
 * ・返り値は変更した配列
 */
const array3 = new Array(5)
array3.fill(1)        // => [1, 1, 1, 1, 1]
array3.fill(2, 1, 3)  // => [1, 2, 2, 1, 1]

/**
 * copyWithinメソッド
 * ・配列の長さを変えることなく、配列内コピーを行う
 */
const array4 = [1, 2, 3, 4, 5, 6, 7];
array4.copyWithin(0, 4, 6);  // => [5, 6, 3, 4, 5, 6, 7]（4〜5番目[5, 6]を0番目から上書き、0番目が5、1番目が6に置き換えられた）
array4.copyWithin(2)         // => [5, 6, 5, 6, 3, 4, 5]（要素全体をコピーし、2番目以降にコピー）